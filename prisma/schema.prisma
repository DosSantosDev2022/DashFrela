// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id               Int       @id @default(autoincrement())
  name             String
  sobreNome        String
  email            String    @unique
  phone            Int
  locationPais     String
  locationCidade   String
  locationEstado   String
  locationEndereco String
  locationCEP      Int
  projects         Project[]
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      String // Por exemplo: "em andamento", "concluída", etc.
  client      Client   @relation(fields: [clientId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  clientId    Int
  tasks       Task[]
  startDate   DateTime
  endDate     DateTime
  price       Decimal  @db.Decimal(8, 2)
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      String // Por exemplo: "em andamento", "concluída", etc.
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])
  startDate   DateTime
  endDate     DateTime
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
